trigger:
  - master

variables:
  - group: octobit8-variables
  - name: dockerfilePath
    value: '$(Build.SourcesDirectory)/Dockerfile'
  - name: tag
    value: '$(Build.BuildId)'

stages:
  - stage: Build
    displayName: Build and Push
    jobs:
      - job: Build
        displayName: Build and Push Docker Image
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Docker@2
            displayName: Build and Push
            inputs:
              command: buildAndPush
              repository: $(app_name)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(acr_name)
              tags: |
                $(tag)
                latest

  - stage: Deploy
    displayName: Deploy to AKS
    dependsOn: Build
    jobs:
      - job: Deploy
        displayName: Deploy to AKS
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: AzureCLI@2
            displayName: 'Azure CLI'
            inputs:
              azureSubscription: '$(azureSubscription)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Login to Azure
                az login --service-principal -u $(servicePrincipalId) -p $(servicePrincipalKey) --tenant $(tenantId)
                
                # Get AKS credentials
                az aks get-credentials --resource-group $(resourceGroupName) --name $(clusterName)
                
                # Update image in deployment
                kubectl set image deployment/$(app_name) $(app_name)=$(acr_name).azurecr.io/$(app_name):$(tag) -n $(namespace)
                
                # Wait for rollout to complete
                kubectl rollout status deployment/$(app_name) -n $(namespace) 